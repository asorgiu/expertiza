<h1 class="center">Submission Record</h1>

<script src="http://mbostock.github.com/d3/d3.v2.js"></script>
<style>
  path {
    stroke: blue;
    stroke-width: 1;
    fill: none;
  }
  .axis {
    shape-rendering: crispEdges;
  }
  .x.axis line {
    stroke: lightgrey;
  }

  .x.axis .minor {
    stroke-opacity: .5;
  }

  .x.axis path {
    display: none;
  }

  .y.axis line, .y.axis path {
    fill: none;
    stroke: #000;
  }
</style>

<body>
  <div id="graph" class="aGraph" style="position:relative;top:0px;left:0; float:left;"></div>
  <script>
    //graph dimensions
    var margins = [80, 80, 80, 80];
    var width = 1000 - margins[1] - margins[3];
    var height = 400 - margins[0] - margins[2];

    // sample plot data
    var data = [3, 6, 2, 7, 5, 2, 0, 3, 8, 9, 2, 5, 9, 3, 6, 3, 6, 2, 7, 5, 2, 1, 3, 8, 9, 2, 5, 9, 2, 7];
    // sample date plot data with a single line
    //var data = [[1-Apr-17,2], [2-Apr-17,3], [3-Apr-17,5], [4-Apr-17,8]];
    // sample date plot data with a multiple lines
    //var data = [[1-Apr-17,2,7], [2-Apr-17,3,9], [3-Apr-17,5,2], [4-Apr-17,8,4]];

    // Set data x range
    var x = d3.scale.linear().domain([0, data.length]).range([0, width]);
    // Set data y range
    var y = d3.scale.linear().domain([0, 10]).range([height, d3.max(data)]).range([height, 0]); //Math.max.apply(Math, data)+10]).range([h, 0]);

    // convert data[] into x and y points
    var line = d3.svg.line()

    // Read the data that is passed in
    //data.forEach(function(d) {
    //  d.date = parseDate(d.date);
    //  d.commits = +d.commits;
    //});


    .x(function(d,i) { 
      //return(d.date);
      return x(i); 
    })
    .y(function(d,i) { 
      //return(d.commits);
      return y(d); 
    })

    // Add an SVG element with the desired dimensions and margin.
    var graph = d3.select("#graph").append("svg:svg")
        .attr("width", width + margins[1] + margins[3])
        .attr("height", height + margins[0] + margins[2])
        .append("svg:g")
        .attr("transform", "translate(" + margins[3] + "," + margins[0] + ")");

    var xAxis = d3.svg.axis().scale(x).tickSize(-height).tickSubdivide(true);
    // Add the x-axis.
    graph.append("svg:g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);


    var yAxisLeft = d3.svg.axis().scale(y).ticks(4).orient("left");
    // Add the y-axis to the left
    graph.append("svg:g")
        .attr("class", "y axis")
        .attr("transform", "translate(-25,0)")
        .call(yAxisLeft);
			
    // Add the data to the line graph
    graph.append("svg:path").attr("d", line(data));
  </script>
</body>

<table>
  <thead>
  <tr>
    <th>Team Id</th>
    <th>Operation</th>
    <th>User</th>
    <th>Content</th>
    <th>Created</th>
    <th colspan="5"></th>
  </tr>
  </thead>
  <! This is the main view of the table. This will add table with either hyperlink or the content nased on the operation. >
  <tbody>
  <% @submission_records.each do |record| %>
      <tr>
        <td><%= record.team_id %></td>
        <td><%= record.operation %></td>
        <td><%= record.user %></td>

        <% if record.operation == "Submit Hyperlink" %>
        <td><a href="<%= record.content %>" target="_blank"><%= record.content %></a><br/></td>

        <% else %>
            <td><%= record.content %></td>
         <% end %>
        <td><%= record.created_at %></td>
      </tr>
  <% end %>
  </tbody>
</table>

		

